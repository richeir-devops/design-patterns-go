package state

import (
	"fmt"
	"strings"
)

///////////////////////////////////////////
// 状态模式（State）：
// 同样也是感觉像依赖注入，不过这次入住的是属性
// 还是通过接口来实现
///////////////////////////////////////////

///////////////////////////////////////////

type WritingState interface {
	write(string)
}

///////////////////////////////////////////

///////////////////////////////////////////

type UpperCase struct {
}

func (uc *UpperCase) write(words string) {
	fmt.Println(strings.ToUpper(words))
}

///////////////////////////////////////////

///////////////////////////////////////////

type LowerCase struct {
}

func (lc *LowerCase) write(words string) {
	fmt.Println(strings.ToLower(words))
}

///////////////////////////////////////////

///////////////////////////////////////////

type DefaultTest struct {
}

func (df *DefaultTest) write(words string) {
	fmt.Println(words)
}

///////////////////////////////////////////

///////////////////////////////////////////

type TextEditor struct {
	state WritingState
}

func (te *TextEditor) typing(words string) {
	te.state.write(words)
}

///////////////////////////////////////////
